{"version":3,"sources":["services/notes.js","components/Form.js","components/Note.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","Form","inputChange","inputValue","handleSubmit","onSubmit","type","value","onChange","Note","note","handleButtonClick","label","important","content","onClick","App","useState","notes","setNotes","newNoteText","setNewNoteText","showAll","setShowAll","notesToShow","filter","useEffect","noteService","initialNotes","toggleImportanceOf","find","changeNote","updatedNote","map","catch","err","console","log","alert","target","event","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","ReactDOM","render","document","getElementById"],"mappings":"wKACMA,EAAU,aAkBD,EAhBA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAc7B,EAXA,SAACC,GAEf,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAS7B,EANA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,S,OCJ7BK,EATF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACxC,OACC,uBAAMC,SAAUD,EAAhB,UACC,uBAAOE,KAAK,OAAOC,MAAOJ,EAAYK,SAAUN,IAChD,wBAAQI,KAAK,SAAb,qBCOYG,EAXF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,kBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACI,gCACG,4BAAIH,EAAKI,UACT,wBAAQC,QAAS,kBAAMJ,EAAkBD,EAAKX,KAA9C,SAAoDa,QCyDhDI,EA3DH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEqBF,mBAAS,IAF9B,mBAEVG,EAFU,KAEGC,EAFH,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,KAIXC,EAAcF,EAAUJ,EAAQA,EAAMO,QAAO,SAACP,GAAD,OAAWA,EAAML,aAEpEa,qBAAU,WACTC,IAAqBjC,MAAK,SAACkC,GAC1BT,EAASS,QAER,IAEH,IAiBMC,EAAqB,SAAC9B,GAC3B,IAAMW,EAAOQ,EAAMY,MAAK,SAACpB,GAAD,OAAUA,EAAKX,KAAOA,KACxCgC,EAAU,2BAAQrB,GAAR,IAAcG,WAAYH,EAAKG,YAE/Cc,EACS5B,EAAIgC,GACXrC,MAAK,SAACsC,GACNb,EAASD,EAAMe,KAAI,SAACvB,GAAD,OAAWA,EAAKX,KAAOA,EAAKiC,EAActB,SAE7DwB,OAAM,SAACC,GACPC,QAAQC,IAAIF,GACZG,MAAM,SAAD,OAAU5B,EAAKI,QAAf,sBACLK,EAASD,EAAMO,QAAO,SAACf,GAAD,OAAUA,EAAKX,KAAOA,UAI/C,OACC,gCACC,uCACA,wBAAQgB,QAAS,kBAAMQ,GAAYD,IAAnC,uBACA,6BACEE,EAAYS,KAAI,SAACvB,GAAD,OAChB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,kBAAmBkB,GAAxCnB,EAAKX,SAGlB,cAAC,EAAD,CAAMG,YA7BkB,SAAC,GAAgB,IAAdqC,EAAa,EAAbA,OAC5BlB,EAAekB,EAAOhC,QA4BiBJ,WAAYiB,EAAahB,aA1CjD,SAACoC,GAChBA,EAAMC,iBACN,IAAIC,EAAa,CAChB5B,QAASM,EACTuB,MAAM,IAAIC,MAAOC,cACjBhC,UAAWiC,KAAKC,SAAW,IAE5BpB,EAAmBe,GAAYhD,MAAK,SAACsD,GACpC7B,EAAS,GAAD,mBAAKD,GAAL,CAAY8B,KACpB3B,EAAe,cCvBlB4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eff9cdd4.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, update };\r\n","import React from 'react';\r\n\r\nconst Form = ({ inputChange, inputValue, handleSubmit }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type='text' value={inputValue} onChange={inputChange} />\r\n\t\t\t<button type='submit'>add</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Note = ({ note, handleButtonClick }) => {\r\n    const label = note.important ? 'make not important' : 'make important';\r\n    return (\r\n        <div>\r\n           <p>{note.content}</p>\r\n           <button onClick={() => handleButtonClick(note.id)}>{label}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Note;\r\n","import React, { useState, useEffect } from 'react';\nimport noteService from './services/notes';\nimport Form from './components/Form';\nimport Note from './components/Note';\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([]);\n\tconst [newNoteText, setNewNoteText] = useState('');\n\tconst [showAll, setShowAll] = useState(true);\n\tconst notesToShow = showAll ? notes : notes.filter((notes) => notes.important);\n\n\tuseEffect(() => {\n\t\tnoteService.getAll().then((initialNotes) => {\n\t\t\tsetNotes(initialNotes);\n\t\t});\n\t}, []);\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault();\n\t\tlet noteObject = {\n\t\t\tcontent: newNoteText,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5\n\t\t};\n\t\tnoteService.create(noteObject).then((returnedNote) => {\n\t\t\tsetNotes([...notes, returnedNote]);\n\t\t\tsetNewNoteText('');\n\t\t});\n\t};\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetNewNoteText(target.value);\n\t};\n\n\tconst toggleImportanceOf = (id) => {\n\t\tconst note = notes.find((note) => note.id === id);\n\t\tconst changeNote = { ...note, important: !note.important };\n\n\t\tnoteService\n\t\t\t.update(id, changeNote)\n\t\t\t.then((updatedNote) => {\n\t\t\t\tsetNotes(notes.map((note) => (note.id === id ? updatedNote : note)));\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\talert(`Note '${note.content}' does not exist.`);\n\t\t\t\tsetNotes(notes.filter((note) => note.id !== id));\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t<button onClick={() => setShowAll(!showAll)}>more/less</button>\n\t\t\t<ul>\n\t\t\t\t{notesToShow.map((note) => (\n\t\t\t\t\t<Note key={note.id} note={note} handleButtonClick={toggleImportanceOf} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<Form inputChange={handleInputChange} inputValue={newNoteText} handleSubmit={addNote} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}